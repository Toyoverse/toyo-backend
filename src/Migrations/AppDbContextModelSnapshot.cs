// <auto-generated />
using System;
using BackendToyo.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BackendToyo.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.12");

            modelBuilder.Entity("BackendToyo.Models.DataEntities.BoxType", b =>
                {
                    b.Property<int>("BoxTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BoxTypeId")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsFortified")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("IsFortified");

                    b.Property<bool>("IsJakana")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("IsJakana");

                    b.Property<int>("TypeId")
                        .HasColumnType("int")
                        .HasColumnName("TypeId");

                    b.HasKey("BoxTypeId")
                        .HasName("pk_boxtypes");

                    b.HasIndex("TypeId")
                        .IsUnique();

                    b.ToTable("BoxTypes");

                    b.HasData(
                        new
                        {
                            BoxTypeId = 1,
                            IsFortified = false,
                            IsJakana = false,
                            TypeId = 1
                        },
                        new
                        {
                            BoxTypeId = 2,
                            IsFortified = true,
                            IsJakana = false,
                            TypeId = 2
                        },
                        new
                        {
                            BoxTypeId = 3,
                            IsFortified = false,
                            IsJakana = true,
                            TypeId = 6
                        },
                        new
                        {
                            BoxTypeId = 4,
                            IsFortified = true,
                            IsJakana = true,
                            TypeId = 7
                        });
                });

            modelBuilder.Entity("BackendToyo.Models.DataEntities.Event", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("CreateTimeStamp")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("BackendToyo.Models.DataEntities.PartPlayer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BonusStat")
                        .HasColumnType("int");

                    b.Property<string>("ChainId")
                        .HasColumnType("longtext");

                    b.Property<int>("PartId")
                        .HasColumnType("int");

                    b.Property<int>("StatId")
                        .HasColumnType("int");

                    b.Property<int>("TokenId")
                        .HasColumnType("int");

                    b.Property<string>("WalletAddress")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("PartId");

                    b.HasIndex("StatId");

                    b.ToTable("PartsPlayer");
                });

            modelBuilder.Entity("BackendToyo.Models.DataEntities.Parts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Colors")
                        .HasColumnType("int");

                    b.Property<int>("Cyber")
                        .HasColumnType("int");

                    b.Property<string>("Desc")
                        .HasColumnType("longtext");

                    b.Property<int>("Part")
                        .HasColumnType("int");

                    b.Property<string>("Prefix")
                        .HasColumnType("longtext");

                    b.Property<int>("RetroBone")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<int>("TorsoId")
                        .HasColumnType("int");

                    b.Property<int>("Variants")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Parts");
                });

            modelBuilder.Entity("BackendToyo.Models.DataEntities.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("JoinTimeStamp")
                        .HasColumnType("longtext");

                    b.Property<string>("Mail")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("User")
                        .HasColumnType("longtext");

                    b.Property<string>("WalletAddress")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("BackendToyo.Models.DataEntities.SmartContractToyoMint", b =>
                {
                    b.Property<string>("TransactionHash")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("TokenId")
                        .HasColumnType("int");

                    b.Property<string>("ChainId")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("BlockNumber")
                        .HasColumnType("int");

                    b.Property<long>("Gwei")
                        .HasColumnType("bigint");

                    b.Property<string>("Sender")
                        .HasColumnType("longtext");

                    b.Property<int>("TotalSypply")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<string>("WalletAddress")
                        .HasColumnType("longtext");

                    b.HasKey("TransactionHash", "TokenId", "ChainId");

                    b.ToTable("SmartContractToyoMints");
                });

            modelBuilder.Entity("BackendToyo.Models.DataEntities.SmartContractToyoSwap", b =>
                {
                    b.Property<string>("TransactionHash")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("FromTokenId")
                        .HasColumnType("int");

                    b.Property<int>("ToTokenId")
                        .HasColumnType("int");

                    b.Property<string>("ChainId")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("BlockNumber")
                        .HasColumnType("int");

                    b.Property<int>("FromTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Sender")
                        .HasColumnType("longtext");

                    b.Property<int>("ToTypeId")
                        .HasColumnType("int");

                    b.HasKey("TransactionHash", "FromTokenId", "ToTokenId", "ChainId");

                    b.ToTable("SmartContractToyoSwaps");
                });

            modelBuilder.Entity("BackendToyo.Models.DataEntities.SmartContractToyoSync", b =>
                {
                    b.Property<string>("ChainId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EventName")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ContractAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("LastBlockNumber")
                        .HasColumnType("int");

                    b.HasKey("ChainId", "EventName", "ContractAddress");

                    b.ToTable("SmartContractToyoSyncs");
                });

            modelBuilder.Entity("BackendToyo.Models.DataEntities.SmartContractToyoTransfer", b =>
                {
                    b.Property<string>("TransactionHash")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("TokenId")
                        .HasColumnType("int");

                    b.Property<string>("ChainId")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("BlockNumber")
                        .HasColumnType("int");

                    b.Property<string>("WalletAddress")
                        .HasColumnType("longtext");

                    b.HasKey("TransactionHash", "TokenId", "ChainId");

                    b.ToTable("SmartContractToyoTransfers");
                });

            modelBuilder.Entity("BackendToyo.Models.DataEntities.SmartContractToyoType", b =>
                {
                    b.Property<string>("TransactionHash")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<string>("ChainId")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("BlockNumber")
                        .HasColumnType("int");

                    b.Property<string>("MetaDataUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Sender")
                        .HasColumnType("longtext");

                    b.HasKey("TransactionHash", "TypeId", "ChainId");

                    b.HasIndex("ChainId");

                    b.ToTable("SmartContractToyoTypes");
                });

            modelBuilder.Entity("BackendToyo.Models.DataEntities.Stat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Stats");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Vitality"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Strength"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Resistance"
                        },
                        new
                        {
                            Id = 4,
                            Name = "CyberForce"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Resilience"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Precision"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Technique"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Analysis"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Speed"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Agility"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Stamina"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Luck"
                        });
                });

            modelBuilder.Entity("BackendToyo.Models.DataEntities.Token", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<long>("NFTId")
                        .HasColumnType("bigint");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Tokens");
                });

            modelBuilder.Entity("BackendToyo.Models.DataEntities.Toyo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BodyType")
                        .HasColumnType("int");

                    b.Property<int>("Colors")
                        .HasColumnType("int");

                    b.Property<int>("Cyber")
                        .HasColumnType("int");

                    b.Property<string>("Desc")
                        .HasColumnType("longtext");

                    b.Property<int>("Existe")
                        .HasColumnType("int");

                    b.Property<int>("Material")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("Rarity")
                        .HasColumnType("int");

                    b.Property<string>("Region")
                        .HasColumnType("longtext");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<string>("Thumb")
                        .HasColumnType("longtext");

                    b.Property<int>("Variants")
                        .HasColumnType("int");

                    b.Property<string>("Video")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Toyos");
                });

            modelBuilder.Entity("BackendToyo.Models.DataEntities.ToyoPlayer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Agility")
                        .HasColumnType("int");

                    b.Property<int>("Analysis")
                        .HasColumnType("int");

                    b.Property<string>("ChainId")
                        .HasColumnType("longtext");

                    b.Property<bool>("ChangeValue")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("CyberForce")
                        .HasColumnType("int");

                    b.Property<int>("Luck")
                        .HasColumnType("int");

                    b.Property<int>("Precision")
                        .HasColumnType("int");

                    b.Property<int>("Resilience")
                        .HasColumnType("int");

                    b.Property<int>("Resistance")
                        .HasColumnType("int");

                    b.Property<int>("Speed")
                        .HasColumnType("int");

                    b.Property<int>("Stamina")
                        .HasColumnType("int");

                    b.Property<int>("Strength")
                        .HasColumnType("int");

                    b.Property<int>("Technique")
                        .HasColumnType("int");

                    b.Property<int>("TokenId")
                        .HasColumnType("int");

                    b.Property<int>("ToyoId")
                        .HasColumnType("int");

                    b.Property<int>("Vitality")
                        .HasColumnType("int");

                    b.Property<string>("WalletAddress")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ToyoId");

                    b.ToTable("ToyosPlayer");
                });

            modelBuilder.Entity("BackendToyo.Models.DataEntities.TxTokenPlayer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<long>("BlockNumber")
                        .HasColumnType("bigint");

                    b.Property<long>("ChainId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TokenId")
                        .HasColumnType("char(36)");

                    b.Property<string>("ToyoSku")
                        .HasColumnType("longtext");

                    b.Property<string>("TxHash")
                        .HasColumnType("longtext");

                    b.Property<string>("TxTimeStamp")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.HasIndex("TokenId");

                    b.ToTable("TxsTokenPlayer");
                });

            modelBuilder.Entity("BackendToyo.Models.DataEntities.TypeToken", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("TypeId");

                    b.Property<string>("ChainId")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("ChainId");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Name");

                    b.Property<string>("Type")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Type");

                    b.HasKey("Id", "ChainId");

                    b.ToTable("TypeTokens");
                });

            modelBuilder.Entity("BackendToyo.Models.DataEntities.UserInfo", b =>
                {
                    b.Property<string>("Login")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("id_login");

                    b.Property<string>("Password")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("tx_password");

                    b.Property<string>("Role")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("tx_role");

                    b.HasKey("Login")
                        .HasName("pk_login");

                    b.ToTable("tb_users");

                    b.HasData(
                        new
                        {
                            Login = "sync_service",
                            Password = "6fef533d07d5c11e14260529d9cea67978c31aee5d6e84f575f1dc95467dabbd",
                            Role = "Block Chain Service"
                        });
                });

            modelBuilder.Entity("BackendToyo.Models.DataEntities.BoxType", b =>
                {
                    b.HasOne("BackendToyo.Models.DataEntities.TypeToken", "TypeToken")
                        .WithOne("BoxType")
                        .HasForeignKey("BackendToyo.Models.DataEntities.BoxType", "TypeId")
                        .HasPrincipalKey("BackendToyo.Models.DataEntities.TypeToken", "Id");

                    b.Navigation("TypeToken");
                });

            modelBuilder.Entity("BackendToyo.Models.DataEntities.PartPlayer", b =>
                {
                    b.HasOne("BackendToyo.Models.DataEntities.Parts", null)
                        .WithMany()
                        .HasForeignKey("PartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackendToyo.Models.DataEntities.Stat", null)
                        .WithMany()
                        .HasForeignKey("StatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BackendToyo.Models.DataEntities.Token", b =>
                {
                    b.HasOne("BackendToyo.Models.DataEntities.TypeToken", null)
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .HasPrincipalKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BackendToyo.Models.DataEntities.ToyoPlayer", b =>
                {
                    b.HasOne("BackendToyo.Models.DataEntities.Toyo", null)
                        .WithMany()
                        .HasForeignKey("ToyoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BackendToyo.Models.DataEntities.TxTokenPlayer", b =>
                {
                    b.HasOne("BackendToyo.Models.DataEntities.Player", null)
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackendToyo.Models.DataEntities.Token", null)
                        .WithMany()
                        .HasForeignKey("TokenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BackendToyo.Models.DataEntities.TypeToken", b =>
                {
                    b.Navigation("BoxType");
                });
#pragma warning restore 612, 618
        }
    }
}
